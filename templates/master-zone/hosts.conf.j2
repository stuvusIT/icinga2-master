// {{ ansible_managed }}

{% for name,attrs in hostvars.iteritems() %}
object Host "{{ name }}" {
	// Generic stuff
	groups = [ "{{ attrs['group_names'] | join('", "') }}" ]
	notes = "{{ attrs.description }}"
	address = "{{ attrs['ansible_host'] }}"

	// Check
	max_check_attempts = 3
	check_interval = 1m
	retry_interval = 30s
	enable_flapping = true

	{% macro insert_var(var) -%}{#- Formats a variable for inserting into Icinga configuration -#}
		{%- if var | type == "NoneType" -%}
			{#- null -#}
			null
		{%- elif var | type == "bool" -%}
			{#- bool -#}
			{{ var | bool | lower }}
		{%- elif var | type == "int" or var | type == "float" -%}
			{#- numeric -#}
			{{ var }}
		{%- elif var | type == "list" -%}
			{#- list -#}
			[ {% for item in var %}{{ insert_var(item) }}, {# Note: trailing commas in lists are legal #}{% endfor %} ]
		{%- elif var | type == "dict" -%}
			{#- dict -#}
			{ {% for k,v in var.iteritems() %}"{{ k }}" = {{ insert_var(v) }}, {# Note: trailing commas in dicts are legal #}{% endfor %} }
		{%- elif var | type == "unicode" or var | type == "AnsibleUnsafeText" -%}
			{#- string or duration -#}
			{%- if var | regex_search("^[\\d\\.]*(ms|s|m|h|d)$") -%}
				{#- duration -#}
				/* Duration */ {{ var }}
			{%- else -%}
				{#- string -#}
				"{{ var | replace('\\', '\\\\') | replace('"', '\\"') | replace('\n', '\\n') }}"
			{%- endif -%}
		{%- else -%}
			{# unknown type #}
			null /* Unknown type {{ var | type }} */
		{%- endif -%}
	{% endmacro -%}

	vars = {
		{% for k,v in icinga2_forwarded_vars.iteritems() if v in attrs %}
		{{- k }} = {{ insert_var(attrs[v]) }}
		{% endfor -%}
	}

{% if attrs.group_names | intersect(parent_zones) | length > 0 %}
{# This is some kind of satellite or master #}
	check_command = "icinga"
	vars.client_endpoint = "{{ groups[attrs.group_names | intersect(parent_zones) | first] | first }}"
{% elif icinga2_noagent_group in attrs.group_names %}
{# This doesn't have any local agent #}
	check_command = "hostalive"
{% else %}
{# This is just a client #}
	check_command = "{{ icinga2_agent_check }}"
	vars.client_endpoint = "{{ name }}"
{% endif %}
}

{% endfor %}

{% for name in hostvars.values() | selectattr('group_names', 'defined') | map(attribute='group_names') | sum(start=[]) | unique %}
object HostGroup "{{ name }}" {
{% if name in icinga2_host_groups %}	display_name = "{{ icinga2_host_groups[name] }}"{% endif %}

}

{% endfor %}
